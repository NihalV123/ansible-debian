--- 
# run by using  ansible-playbook local.yml
- hosts: localhost
  connection: local
  gather_facts: yes
  become: true
  
  vars:
    ansible_python_interpreter: /usr/bin/python3
    string_conversion_action: ignore
    
  pre_tasks:
  - name: System details
    debug: msg="{{ item }}"
    with_items: 
    - "{{ ansible_distribution }}"
    - "{{ ansible_distribution_version }}"
    - "{{ ansible_hostname }}"
    - "{{ ansible_fqdn }}"
    - "{{ ansible_distribution_major_version }}"
    
  #- name: System details
  #  gather_facts: True
  #  gather_subset: interfaces
  #  module_defaults:
   # 	arista.eos.eos_facts:
   #  		gather_network_resources: interfaces
  
  tasks:
  - name: update repo
    package:
        update_cache: yes
    changed_when: False
    
      
  - name: install kali tools for kali linux
    package: name=htop state=latest
    when: ansible_facts['distribution'] == "Kali GNU/Linux"
    
  - include: packages_debian/users.yml  
  - include: packages_debian/kali_package.yml   
  - include: packages_debian/kali_python.yml    
  - include: packages_debian/kali_docker.yml   
  - include: packages_debian/kali_node.yml   
  - include: packages_debian/kali_ruby.yml   
  - include: packages_debian/zsh_setup.yml   
  - include: packages_debian/cron.yml     

        
